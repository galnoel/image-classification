data:
  labeled_test_dir: from_preprocessor/images/test
  unlabeled_test_dir: from_preprocessor/images/test
  source_dirs:
  - data/PetImages/Cat
  - data/PetImages/Dog
  train_dir: data_processed/train
  test_dir: data_processed/test
  test_split_ratio: 0.2
# ------------------------------------------------------------------
model_params:
  name: "efficientnet_b0"  # CHEATSHEET: Choose your model architecture here.
                            # Options you've implemented:
                            #   - "efficientnet_b0":    Fast and strong baseline. Great first choice.
                            #   - "resnet50":           Classic, reliable workhorse.
                            #   - "convnext_tiny":      Modern CNN, often outperforms EfficientNet.
                            #   - "swin_t":             Powerful Transformer, good for complex patterns.
                            #   - "vit_b_16":           Original Vision Transformer, needs lots of data.
                            #   - "maxvit_tiny":        Hybrid model, balances CNN speed with Transformer power.
                            #   - "cvt_13":             Hybrid model, very efficient.
                            #   - "coat_lite_mini":     Hybrid model, lightweight and high-performance.
                            #   - "efficientformerv2_s0": Hybrid model, optimized for speed.
                            #   - "levit_192":          Hybrid model, extremely fast.

  pretrained: true          # Always keep this 'true' to use transfer learning.
  local_weights_dir: "pretrained_models" # Folder for your offline .pth files.

# ------------------------------------------------------------------
loss_function:
  name: "CrossEntropyLoss"  # CHEATSHEET: Choose your loss function.
                            # Options:
                            #   - "CrossEntropyLoss": The best choice for BALANCED datasets. Standard and reliable.
                            #   - "FocalLoss":        The best choice for IMBALANCED datasets. It forces the model
                            #                         to focus on the rare/hard class.

  params:
    # --- Parameters for FocalLoss (ignored if using CrossEntropyLoss) ---
    alpha: 0.25             # Weight for the positive class. Helps with mild imbalance.
    gamma: 2.0              # The focusing parameter. Higher values make the model focus more on hard examples. (2 is a good default).
    reduction: 'mean'       # Keep this as 'mean' to get the average loss.

# ------------------------------------------------------------------
data_params:
  image_size: 224
  batch_size: 32
  num_workers: 4

# ------------------------------------------------------------------
train_params:
  epochs: 5                 # Epochs for Stage 1 (feature extraction).
  finetune_epochs: 3        # Epochs for Stage 2 (fine-tuning).

  learning_rate: 0.001      # Learning rate for Stage 1. A good default to start with.
  finetune_learning_rate: 0.00005 # Learning rate for Stage 2. Must be much smaller (10x-100x) than the initial LR.

  optimizer: "AdamW"        # CHEATSHEET: Choose your optimizer.
                            # Options:
                            #   - "AdamW":  Often slightly better than Adam due to improved weight decay. A great default.
                            #   - "Adam":   The classic, robust optimizer.

  scheduler:
    name: "None"           # CHEATSHEET: Choose a learning rate scheduler.
                            # Options:
                            #   - "None":               Keeps the learning rate constant. Simplest option.
                            #   - "CosineAnnealingLR":  Smoothly decreases the LR over epochs. Helps the model
                            #                           settle into a better final solution. Highly recommended.
    params:
      # --- Parameters for CosineAnnealingLR ---
      T_max: 10             # The number of epochs for one half-cycle of the cosine curve.
outputs:
  base_dir: outputs
  log_file: '{run_folder}/run.log'
  model_path: '{run_folder}/best_model.pth'
  report_path: '{run_folder}/results_report.pkl'
  cm_plot_path: '{run_folder}/confusion_matrix.png'
  submission_file: '{run_folder}/submission.csv'
  training_curves_plot_path: '{run_folder}/training_curves.png'
  model_path_finetuned: '{run_folder}/best_model_finetuned.pth'
  report_path_finetuned: '{run_folder}/results_report_finetuned.pkl'
  cm_plot_path_finetuned: '{run_folder}/confusion_matrix_finetuned.png'
  training_curves_plot_path_finetuned: '{run_folder}/training_curves_finetuned.png'
